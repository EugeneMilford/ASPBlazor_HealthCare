@page "/deleteappointment/{PatientId:int}" 
@inject AppointmentClient Client 
@inject NavigationManager NavigationManager 
@inject IJSRuntime JSRuntime 
@rendermode InteractiveServer  

<PageTitle>Delete Appointment</PageTitle>  

<!-- Breadcrumb --> 
<div class="container-fluid breadcrumb-container breadcrumb-appointments">     
    <div class="container text-center py-5">         
        <h1 class="text-white display-4 mb-4 fw-bold">@title</h1>         
        <ol class="breadcrumb justify-content-center mb-0">             
            <li class="breadcrumb-item"><a href="/" class="text-white">Home</a></li>             
            <li class="breadcrumb-item"><a href="/appointments" class="text-white">Appointments</a></li>             
            <li class="breadcrumb-item active text-primary">Delete</li>         
        </ol>     
    </div> 
</div>  

<div class="container my-5">
    @if (isLoading)
    {
        <div class="text-center p-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading appointment details...</p>
        </div>
    }
    else if (loadError)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i>Error loading appointment data. Please try again.
        </div>
        <div class="text-center mt-3">
            <a href="/appointments" class="btn btn-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Appointments
            </a>
        </div>
    }
    else if (appointment == null)     
    {         
        <div class="alert alert-danger">             
            <i class="fas fa-exclamation-circle me-2"></i>Appointment not found         
        </div>
        <div class="text-center mt-3">
            <a href="/appointments" class="btn btn-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Appointments
            </a>
        </div>
    }     
    else     
    {         
        <div class="card shadow">             
            <div class="card-header bg-danger text-white">                 
                <h2 class="h4 mb-0">                     
                    <i class="fas fa-exclamation-triangle me-2"></i>@title                 
                </h2>             
            </div>             
                     
            <div class="card-body">                 
                <div class="alert alert-warning">                     
                    <i class="fas fa-exclamation-circle me-2"></i>                     
                    Are you sure you want to delete this appointment? This action cannot be undone.                 
                </div>                 
                                 
                <div class="appointment-details p-4 border rounded">                     
                    <div class="row mb-3">                         
                        <div class="col-md-3 fw-bold">Patient:</div>                         
                        <div class="col-md-9">@appointment.Name</div>                     
                    </div>                     
                    <div class="row mb-3">                         
                        <div class="col-md-3 fw-bold">Doctor:</div>                         
                        <div class="col-md-9">@appointment.DoctorId</div>                     
                    </div>                     
                    <div class="row mb-3">                         
                        <div class="col-md-3 fw-bold">Date/Time:</div>                         
                        <div class="col-md-9">@appointment.AppointmentDateTime.ToString("f")</div>                     
                    </div>                     
                    <div class="row mb-3">                         
                        <div class="col-md-3 fw-bold">Type:</div>                         
                        <div class="col-md-9">@appointment.AppointmentType</div>                     
                    </div>                     
                    @if (!string.IsNullOrEmpty(appointment.Notes))                     
                    {                         
                        <div class="row">                             
                            <div class="col-md-3 fw-bold">Notes:</div>                             
                            <div class="col-md-9">@appointment.Notes</div>                         
                        </div>                     
                    }                 
                </div>             
            </div>             
                     
            <div class="card-footer bg-light d-flex justify-content-between">                 
                <a href="/appointments" class="btn btn-secondary">                     
                    <i class="fas fa-arrow-left me-2"></i>Cancel                 
                </a>                 
                <button type="button"                  
                       @onclick="ConfirmDeleteAsync"                  
                       class="btn btn-danger">                 
                    <i class="fas fa-trash-alt me-2"></i>Confirm Delete                 
                </button>             
            </div>         
        </div>     
    } 
</div>      

@code {     
    [Parameter]     
    public int PatientId { get; set; }      
    
    private AppointmentDetails appointment;     
    private string title = "Delete Appointment";
    private bool isLoading = true;
    private bool loadError = false;
    private bool deleteCompleted = false;
      
    protected override async Task OnInitializedAsync()     
    {         
        await LoadAppointmentData();     
    }
    
    private async Task LoadAppointmentData()
    {
        try 
        {
            appointment = await Client.GetAppointmentAsync(PatientId);
            
            if (appointment != null)
            {
                title = $"Delete {appointment.Name}'s Appointment";
            }
            isLoading = false;
        }
        catch (Exception ex)
        {
            loadError = true;
            isLoading = false;
            Console.WriteLine($"Error loading appointment: {ex.Message}");
        }
    }
      
    private async Task ConfirmDeleteAsync()     
    {
        await Client.DeleteAppointmentAsync(PatientId);
        await JSRuntime.InvokeVoidAsync("alert", "Appointment successfully deleted!");
        NavigationManager.NavigateTo("/appointments");
    } 
}