@page "/appointments"
@inject AppointmentClient Client
@using HealthCare.Frontend.Clients

<PageTitle>Scheduled Appointments</PageTitle>

<!-- Breadcrumb - Dynamic version -->
<div class="container-fluid breadcrumb-container @GetBreadcrumbClass()">
    <div class="container text-center py-5">
        <h1 class="text-white display-4 mb-4 fw-bold">@PageTitle</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="/" class="text-white">Home</a></li>
            <li class="breadcrumb-item active text-primary">@CurrentPage</li>
        </ol>    
    </div>
</div>

<div class="appointment-container">
    <h2 class="appointment-header text-center mb-4">
        <i class="fas fa-calendar-check me-2"></i>Upcoming Appointments
    </h2>
    
    <div class="appointment-list">
        @foreach (var appointment in appointments)
        {
            <div class="appointment-card @appointment.Status.ToLower() mb-4">
                <div class="appointment-card-header d-flex justify-content-between align-items-center p-3">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-user-circle me-3 fa-2x"></i>
                        <span class="patient-name h5 mb-0">@appointment.Name</span>
                    </div>
                    <span class="appointment-status badge rounded-pill px-3 py-2">
                        @appointment.Status
                    </span>
                </div>
                
                <div class="appointment-details p-3">
                    <div class="detail-row row mb-2">
                        <div class="col-4 detail-label">
                            <i class="fas fa-user-md me-2"></i>Doctor:
                        </div>
                        <div class="col-8 detail-value fw-bold">
                            @appointment.Doctor
                        </div>
                    </div>
                    <div class="detail-row row mb-2">
                        <div class="col-4 detail-label">
                            <i class="fas fa-clock me-2"></i>Date/Time:
                        </div>
                        <div class="col-8 detail-value">
                            @appointment.AppointmentDateTime.ToString("f")
                        </div>
                    </div>
                    <div class="detail-row row mb-2">
                        <div class="col-4 detail-label">
                            <i class="fas fa-stopwatch me-2"></i>Duration:
                        </div>
                        <div class="col-8 detail-value">
                            @appointment.Duration.ToString(@"hh\:mm")
                        </div>
                    </div>
                    <div class="detail-row row">
                        <div class="col-4 detail-label">
                            <i class="fas fa-stethoscope me-2"></i>Type:
                        </div>
                        <div class="col-8 detail-value">
                            @appointment.AppointmentType
                        </div>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(appointment.Notes))
                {
                    <div class="appointment-notes p-3 bg-light rounded-bottom">
                        <span class="notes-label fw-bold d-block mb-2">
                            <i class="fas fa-notes-medical me-2"></i>Notes:
                        </span>
                        <p class="mb-0">@appointment.Notes</p>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private AppointmentClient client = new();

    private AppointmentSummary[] appointments;

    protected override void OnInitialized()
    {
        appointments = client.GetAppointments();
    }

    private string CurrentPage => GetCurrentPage();
    private string PageTitle => GetPageTitle();

    private string GetBreadcrumbClass()
    {
        var relativePath = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        return relativePath.Split('/')[0] switch
        {
            "doctors" => "breadcrumb-doctors",
            "appointments" => "breadcrumb-appointments",
            "departments" => "breadcrumb-departments",
            "contact" => "breadcrumb-contact",
            "services" => "breadcrumb-services",
            _ => "breadcrumb-home"
        };
    }

    private string GetCurrentPage()
    {
        var relativePath = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        return relativePath.Split('/')[0] switch
        {
            "doctors" => "Doctors",
            "appointments" => "Appointments",
            "departments" => "Departments",
            "contact" => "Contact",
            "services" => "Services",
            _ => "Home"
        };
    }

    private string GetPageTitle()
    {
        return CurrentPage switch
        {
            "Doctors" => "Our Medical Specialists",
            "Appointments" => "Book an Appointment",
            "Departments" => "Our Departments",
            "Contact" => "Contact Our Clinic",
            "Services" => "Our Services",
            _ => "Quality Healthcare Services"
        };
    }

    [Inject] private NavigationManager NavigationManager { get; set; }
}
