// <auto-generated />
using System;
using HealthCare.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthCare.Backend.Data.Migrations
{
    [DbContext(typeof(HealthCareContext))]
    partial class HealthCareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("HealthCare.Backend.Entities.Appointment", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PatientId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("StatusId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HealthCare.Backend.Entities.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Name = "Dr. Smith"
                        },
                        new
                        {
                            DoctorId = 2,
                            Name = "Dr. Johnson"
                        },
                        new
                        {
                            DoctorId = 3,
                            Name = "Dr. Williams"
                        },
                        new
                        {
                            DoctorId = 4,
                            Name = "Dr. Brown"
                        },
                        new
                        {
                            DoctorId = 5,
                            Name = "Dr. Davis"
                        });
                });

            modelBuilder.Entity("HealthCare.Backend.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StatusId");

                    b.ToTable("Statusses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            CurrentStatus = "Scheduled"
                        },
                        new
                        {
                            StatusId = 2,
                            CurrentStatus = "Confirmed"
                        },
                        new
                        {
                            StatusId = 3,
                            CurrentStatus = "Completed"
                        },
                        new
                        {
                            StatusId = 4,
                            CurrentStatus = "Cancelled"
                        },
                        new
                        {
                            StatusId = 5,
                            CurrentStatus = "No-Show"
                        });
                });

            modelBuilder.Entity("HealthCare.Backend.Entities.Appointment", b =>
                {
                    b.HasOne("HealthCare.Backend.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthCare.Backend.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
